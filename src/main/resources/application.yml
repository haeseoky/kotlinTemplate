server:
  port: 4001
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test?autoReconnect=true&useSSL=true
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      auto-commit: false
      maximum-pool-size: 5
      pool-name: HikariCP
  jpa:
    database-platform: org.hibernate.dialect.MySQL57Dialect
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        connection:
          release_mode: on_close
          provider_disables_autocommit: true
    show-sql: true
  cloud:
    function:
      definition: producer-invoice-confirmed;consumer-invoice-confirmed
    stream:
      default-binder: kafka
      kafka:
        binder:
          min-partition-count: 2
          auto-add-partitions: true
          brokers: ${KAFKA_BROKERS:localhost:9092}
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          replication-factor: 1
      bindings:
        producer-invoice-confirmed-out-0: # 프로듀서 설정 (BeanName-out-#)
          destination: fn-invoice.invoice-confirmed  # TopicName (ProjectName.EventName)
          content-type: application/json
          producer:
            partition-count: 2
        consumer-invoice-confirmed-in-0: # 컨슈머 설정 (BeanName-in-#)
          destination: fn-invoice.invoice-confirmed
          content-type: application/json
          group: test-group
logging:
  level:
    org.hibernate.type: TRACE
---
spring:
  config:
    activate:
      on-profile: local
---
spring:
  config:
    activate:
      on-profile: test
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  datasource:
    url: jdbc:h2:mem:Demo;MODE=MySQL;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver
---
spring:
  config:
    activate:
      on-profile: dev
---
spring:
  config:
    activate:
      on-profile: staging
---
spring:
  config:
    activate:
      on-profile: prod
---
spring:
  cloud:
    stream:
      kafka:
        binder:
          minPartitionCount: 1
          autoAddPartitions: true
          producer-properties:
            retries: 2
          brokers: ${KAFKA_TEST_BROKERS:localhost:9092}
          configuration:
            security:
              protocol: PLAINTEXT
  config:
    activate:
      on-profile: test-kafka